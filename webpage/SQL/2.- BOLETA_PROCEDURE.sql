CREATE OR REPLACE PROCEDURE BOLETA_CREATE(
    RUT_VENDEDOR IN VENDEDOR.RUT_VENDEDOR%TYPE,
    SKU_P IN PRODUCTO.ID_PRODUCTO%TYPE,
    STOCK_P IN PRODUCTO.STOCK%TYPE
)
IS
    NOMBRE_AUX VARCHAR2(1000);
	CONTADOR_PRODUCTOS NUMBER;
	VALOR_AUX NUMBER;
	TOTAL_AUX NUMBER;
	SUBTOTAL_AUX NUMBER;
	ID_BOLETA_AUX NUMBER;
	CANTIDAD_AUX NUMBER;
	CANTIDAD EXCEPTION;
	PRODUCTO_EXISTENTE EXCEPTION;
	CANTIDAD_INSUFICIENTE EXCEPTION;
    PRODUCTO_aux NUMBER;
    PRODUCT_EXCEPTION EXCEPTION;
BEGIN
	LOCK TABLE BOLETA IN ROW EXCLUSIVE MODE;
	SELECT COUNT(*) INTO CONTADOR_PRODUCTOS FROM BOLETA WHERE SKU_P = ID_PRODUCTO;

    SELECT COUNT(*) INTO PRODUCTO_aux FROM PRODUCTO P WHERE P.ID_PRODUCTO = SKU_P;
    
    IF PRODUCTO_aux = 1 THEN
        IF CONTADOR_PRODUCTOS = 0 THEN
            SELECT STOCK INTO CANTIDAD_AUX FROM PRODUCTO P WHERE SKU_P = P.ID_PRODUCTO; 
            IF STOCK_P <= CANTIDAD_AUX THEN
                IF STOCK_P >=1 THEN
                    SELECT NVL(MAX(ID_BOLETA)+1,1) INTO ID_BOLETA_AUX FROM BOLETA;
                    UPDATE PRODUCTO SET STOCK = STOCK - STOCK_P WHERE ID_PRODUCTO = SKU_P;
                    SELECT VALOR INTO VALOR_AUX FROM PRODUCTO P WHERE SKU_P = P.ID_PRODUCTO;
                    SUBTOTAL_AUX := STOCK_P * VALOR_AUX;
                    TOTAL_AUX := SUBTOTAL_AUX + (SUBTOTAL_AUX*0.19);
                    SELECT NOMBRE INTO NOMBRE_AUX FROM PRODUCTO WHERE ID_PRODUCTO = SKU_P;
                    INSERT INTO BOLETA VALUES(ID_BOLETA_AUX, RUT_VENDEDOR, SKU_P, STOCK_P, SUBTOTAL_AUX, NOMBRE_AUX);
                    DBMS_OUTPUT.PUT_LINE('BOLETA actualizadA.');
                ELSE 
                    RAISE CANTIDAD_INSUFICIENTE;
                END IF;
            ELSE
                RAISE CANTIDAD;
            END IF;
        ELSE	
            RAISE PRODUCTO_EXISTENTE;
        END IF;
    ELSE
        RAISE PRODUCT_EXCEPTION;
    END IF;
    
	EXCEPTION
		WHEN CANTIDAD THEN
			DBMS_OUTPUT.PUT_LINE('No hay stock disponible.');
			ROLLBACK;
		WHEN PRODUCTO_EXISTENTE THEN
			DBMS_OUTPUT.PUT_LINE('PRODUCTO ya añadido al BOLETA.');
			ROLLBACK;
		WHEN CANTIDAD_INSUFICIENTE THEN
			DBMS_OUTPUT.PUT_LINE('Cantidad a comprar insuficiente.');
			ROLLBACK;
        WHEN PRODUCT_EXCEPTION THEN
            DBMS_OUTPUT.PUT_LINE('Producto no registrado en la base de datos.');
			ROLLBACK;
END;

CREATE OR REPLACE PROCEDURE BOLETA_ADD_PRODUCTO(
	EMAIL_AUX IN VENDEDOR.EMAIL%TYPE
)
IS
	ID_USUARIO_AUX VARCHAR2(100);
BEGIN 
	SELECT RUT_VENDEDOR INTO ID_USUARIO_AUX FROM VENDEDOR WHERE EMAIL = EMAIL_AUX;
	DBMS_OUTPUT.PUT_LINE(ID_USUARIO_AUX);
END;

CREATE OR REPLACE PROCEDURE BOLETA_DELETE_PRODUCT(
	SKU_PROD IN PRODUCTO.ID_PRODUCTO%TYPE 
)
IS 
BEGIN
	DELETE FROM BOLETA WHERE ID_PRODUCTO = SKU_PROD;
END;

CREATE OR REPLACE PROCEDURE BOLETA_REGISTRO
IS
    CONTADOR NUMBER;
    FECHA_VENTA DATE;
    RUT_VENDEDOR_AUX VARCHAR2(100);
    TOTAL_VENTA NUMBER;
    SUBTOTAL NUMBER;
    
    TOTAL_AUX NUMBER;
    ID_BOLETA_AUX NUMBER;
    N_VENTA_AUX NUMBER;
    FILAS_AUX NUMBER;
    SKU_AUX NUMBER;
    CANTIDAD_AUX NUMBER;
    SUBTOTAL_AUX NUMBER;
    SIN_ARTICULOS EXCEPTION;
    
BEGIN
    SELECT COUNT(*) INTO FILAS_AUX FROM BOLETA;
    IF FILAS_AUX >= 1 THEN
        DBMS_OUTPUT.PUT_LINE('Con productos');
        FECHA_VENTA := SYSDATE;
        SELECT RUT_VENDEDOR INTO RUT_VENDEDOR_AUX FROM BOLETA WHERE ID_BOLETA = 1;
        
        SELECT NVL(MAX(N_VENTA)+1,10000) INTO N_VENTA_AUX FROM REGISTRO_VENTAS;
        SELECT SUM(SUBTOTAL) INTO SUBTOTAL_AUX FROM BOLETA;
        TOTAL_AUX := SUBTOTAL_AUX + (SUBTOTAL_AUX*0.19);
        
        INSERT INTO REGISTRO_VENTAS VALUES(N_VENTA_AUX, RUT_VENDEDOR_AUX, TRUNC(TOTAL_AUX), FECHA_VENTA);
        DBMS_OUTPUT.PUT_LINE('Venta registrada');
        DELETE FROM BOLETA;
    ELSE
        RAISE SIN_ARTICULOS;
    END IF;
    
    EXCEPTION
		WHEN SIN_ARTICULOS THEN
			DBMS_OUTPUT.PUT_LINE('Carro vacio');
			ROLLBACK;
END;





